{"ast":null,"code":"var _jsxFileName = \"/Users/pranavchandravarmapenmatcha/Desktop/cryptoalpha/cryptoalpha/src/components/Coininfo.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../api\";\nimport { CryptoState } from \"../context\";\nimport { Button, CircularProgress, createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Coininfo(_ref) {\n  _s();\n  let {\n    coin\n  } = _ref;\n  const chartdays = [{\n    label: \"24 Hours\",\n    value: 1\n  }, {\n    label: \"30 Days\",\n    value: 30\n  }, {\n    label: \"3 Months\",\n    value: 90\n  }, {\n    label: \"1 Year\",\n    value: 365\n  }];\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n  const [hist, setHist] = useState();\n  const [interval, setInterval] = useState(1);\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n  const getHistData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, interval, currency));\n    setHist(data.prices);\n  };\n  useEffect(() => {\n    getHistData();\n  }, [currency, interval]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: !hist ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"gold\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: hist.map(coin => {\n              var date = new Date(coin[0]);\n              var time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return interval === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: hist.map(coin => {\n                coin[1];\n              }),\n              label: `Price ( Past ${interval} Days ) in ${currency}`,\n              borderColor: \"#EEBC1D\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"space-around\",\n            width: \"100%\"\n          },\n          children: chartdays.map(day => {\n            /*#__PURE__*/_jsxDEV(Button, {\n              onclick: () => setInterval(day.value),\n              selected: day.value === interval,\n              children: day.label\n            }, day.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Coininfo, \"cBPMptaqSOr9n3hAhB1axPt8JIM=\", false, function () {\n  return [useStyles];\n});\n_c = Coininfo;\nexport default Coininfo;\nvar _c;\n$RefreshReg$(_c, \"Coininfo\");","map":{"version":3,"names":["axios","useEffect","useState","HistoricalChart","CryptoState","Button","CircularProgress","createTheme","ThemeProvider","Line","Coininfo","coin","chartdays","label","value","darkTheme","palette","primary","main","type","useStyles","makeStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","hist","setHist","interval","setInterval","currency","symbol","getHistData","data","get","id","prices","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","elements","point","radius","day"],"sources":["/Users/pranavchandravarmapenmatcha/Desktop/cryptoalpha/cryptoalpha/src/components/Coininfo.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../api\";\nimport { CryptoState } from \"../context\";\nimport { Button, CircularProgress, createTheme, ThemeProvider } from \"@material-ui/core\";\nimport {Line} from 'react-chartjs-2';\nfunction Coininfo({coin}) {\n    const chartdays = [\n        {\n          label: \"24 Hours\",\n          value: 1,\n        },\n        {\n          label: \"30 Days\",\n          value: 30,\n        },\n        {\n          label: \"3 Months\",\n          value: 90,\n        },\n        {\n          label: \"1 Year\",\n          value: 365,\n        },\n      ];\n    const darkTheme = createTheme({\n        palette: {\n          primary: {\n            main: \"#fff\",\n          },\n          type: \"dark\",\n        },\n      });\n      const useStyles = makeStyles((theme) => ({\n        container: {\n          width: \"75%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 25,\n          padding: 40,\n          [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            marginTop: 0,\n            padding: 20,\n            paddingTop: 0,\n          },\n        },\n      }));\n      const classes = useStyles();\n    const[hist, setHist] = useState();\n    const [interval, setInterval] = useState(1);\n    const {currency, symbol} = CryptoState();\n    const getHistData = async () => {\n        const {data} = await axios.get(HistoricalChart(coin.id, interval, currency))\n        setHist(data.prices)\n    }\n    useEffect(() => {\n        getHistData()\n    }, [currency, interval])\n\nreturn (\n    <ThemeProvider theme={darkTheme}>\n        <div className={classes.container}>\n            {\n                !hist ? (\n                    <CircularProgress style = {{color: \"gold\"}} size = {250} thickness={1}/>\n                ) : (\n                    <>\n                    <Line\n                    data = {{\n                        labels: hist.map((coin) => {\n                            var date = new Date(coin[0]);\n                            var time = date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                      return interval === 1 ? time : date.toLocaleDateString();\n                        }),\n                        datasets:[\n                           {data : hist.map((coin) => {\n                                coin[1]\n                            }),\n                            label: `Price ( Past ${interval} Days ) in ${currency}`,\n                            borderColor: \"#EEBC1D\",\n                            }\n                        ]\n                    }}\n                        options={{\n                        elements: {\n                            point: {\n                            radius: 1,\n                            },\n                         },\n                        }}\n                     />\n                     <div style={{\n                        display: \"flex\",\n                        marginTop: 20,\n                        justifyContent: \"space-around\",\n                        width: \"100%\",\n                        }}>\n                    {chartdays.map((day)=> {\n                        <Button key = {day.value} \n                        onclick = {() => setInterval(day.value)}\n                        selected = {day.value === interval}\n                        >{day.label}</Button>\n                    })}\n                     </div>\n                    </>\n                )\n            }\n        </div>\n    </ThemeProvider>\n)\n\n}\n\nexport default Coininfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}