{"ast":null,"code":"var _jsxFileName = \"/Users/pranavchandravarmapenmatcha/Desktop/cryptoalpha/cryptoalpha/src/components/Coininfo.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../api\";\nimport { CryptoState } from \"../context\";\nimport { CircularProgress, createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core';\nimport Button from './Button';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Coininfo = _ref => {\n  _s();\n  let {\n    coin\n  } = _ref;\n  const chartdays = [{\n    label: \"24 Hours\",\n    value: 1\n  }, {\n    label: \"30 Days\",\n    value: 30\n  }, {\n    label: \"3 Months\",\n    value: 90\n  }, {\n    label: \"1 Year\",\n    value: 365\n  }];\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n  const [hist, setHist] = useState();\n  const [interval, setInterval] = useState(1);\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n  const getHistData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, interval, currency));\n    setHist(data.prices);\n  };\n  useEffect(() => {\n    getHistData();\n  }, [currency, interval]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: !hist ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"gold\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: hist.map(coin => {\n              var date = new Date(coin[0]);\n              var time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return interval === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: hist.map(coin => {\n                return coin[1];\n              }),\n              label: `Price ( Past ${interval} Days ) in ${currency}`,\n              borderColor: \"#EEBC1D\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"space-around\",\n            width: \"100%\"\n          },\n          children: chartdays.map(day => {\n            /*#__PURE__*/_jsxDEV(Button, {\n              onclick: () => {\n                setInterval(day.value);\n              },\n              selected: day.value === interval,\n              children: day.label\n            }, day.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Coininfo, \"cBPMptaqSOr9n3hAhB1axPt8JIM=\", true);\n_c = Coininfo;\nexport default Coininfo;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"../api\"\n// import { Line } from \"react-chartjs-2\";\n// import {\n//   CircularProgress,\n//   createTheme,\n//   makeStyles,\n//   ThemeProvider,\n// } from \"@material-ui/core\";\n// import SelectButton from \"./Button\";\n// import { CryptoState } from \"../context\";\n\n// const CoinInfo = ({ coin }) => {\n//         const chartDays = [\n//         {\n//           label: \"24 Hours\",\n//           value: 1,\n//         },\n//         {\n//           label: \"30 Days\",\n//           value: 30,\n//         },\n//         {\n//           label: \"3 Months\",\n//           value: 90,\n//         },\n//         {\n//           label: \"1 Year\",\n//           value: 365,\n//         },\n//       ];\n//   const [historicData, setHistoricData] = useState();\n//   const [days, setDays] = useState(1);\n//   const { currency } = CryptoState();\n//   const [flag,setflag] = useState(false);\n\n//   const useStyles = makeStyles((theme) => ({\n//     container: {\n//       width: \"75%\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       marginTop: 25,\n//       padding: 40,\n//       [theme.breakpoints.down(\"md\")]: {\n//         width: \"100%\",\n//         marginTop: 0,\n//         padding: 20,\n//         paddingTop: 0,\n//       },\n//     },\n//   }));\n\n//   const classes = useStyles();\n\n//   const fetchHistoricData = async () => {\n//     const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n//     setflag(true);\n//     setHistoricData(data.prices);\n//   };\n\n//   useEffect(() => {\n//     fetchHistoricData();\n//   }, [days]);\n\n//   const darkTheme = createTheme({\n//     palette: {\n//       primary: {\n//         main: \"#fff\",\n//       },\n//       type: \"dark\",\n//     },\n//   });\n//   var data = null;\n//   if (historicData) {\n//   data = {\n//     labels: historicData.map((item) => {\n//               let date = new Date(item[0]);\n//               let time =\n//                 date.getHours() > 12\n//                   ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n//                   : `${date.getHours()}:${date.getMinutes()} AM`;\n//               return days === 1 ? time : date.toLocaleDateString();\n//             }),\n//             datasets: [\n//                       {\n//                         data: historicData.map((item) => item[1]),\n//                         label: `Price ( Past ${days} Days ) in ${currency}`,\n//                         borderColor: \"#EEBC1D\",\n//                       },\n//                     ]    \n// }\n//   }\n//   return (\n//     <ThemeProvider theme={darkTheme}>\n//       <div className={classes.container}>\n//         {!historicData | flag===false ? (\n//           <CircularProgress\n//             style={{ color: \"gold\" }}\n//             size={250}\n//             thickness={1}\n//           />\n//         ) : (\n//           <>\n\n//             <Line data={data}/>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 marginTop: 20,\n//                 justifyContent: \"space-around\",\n//                 width: \"100%\",\n//               }}\n//             >\n//               {chartDays.map((day) => (\n//                 <SelectButton\n//                   key={day.value}\n//                   onClick={() => {setDays(day.value);\n//                     setflag(false);\n//                   }}\n//                   selected={day.value === days}\n//                 >\n//                   {day.label}\n//                 </SelectButton>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"Coininfo\");","map":{"version":3,"names":["axios","useEffect","useState","HistoricalChart","CryptoState","CircularProgress","createTheme","ThemeProvider","Line","makeStyles","Button","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","Coininfo","coin","chartdays","label","value","darkTheme","palette","primary","main","type","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","hist","setHist","interval","setInterval","currency","symbol","getHistData","data","get","id","prices","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","elements","point","radius","day"],"sources":["/Users/pranavchandravarmapenmatcha/Desktop/cryptoalpha/cryptoalpha/src/components/Coininfo.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"../api\";\nimport { CryptoState } from \"../context\";\nimport {CircularProgress, createTheme, ThemeProvider } from \"@material-ui/core\";\nimport {Line} from 'react-chartjs-2';\nimport {makeStyles} from '@material-ui/core'\nimport Button from './Button'\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n  \n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\nconst Coininfo= ({coin}) => {\n    const chartdays = [\n        {\n          label: \"24 Hours\",\n          value: 1,\n        },\n        {\n          label: \"30 Days\",\n          value: 30,\n        },\n        {\n          label: \"3 Months\",\n          value: 90,\n        },\n        {\n          label: \"1 Year\",\n          value: 365,\n        },\n      ];\n    const darkTheme = createTheme({\n        palette: {\n          primary: {\n            main: \"#fff\",\n          },\n          type: \"dark\",\n        },\n      });\n      const useStyles = makeStyles((theme) => ({\n        container: {\n          width: \"75%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 25,\n          padding: 40,\n          [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            marginTop: 0,\n            padding: 20,\n            paddingTop: 0,\n          },\n        },\n      }));\n      const classes = useStyles();\n    const[hist, setHist] = useState();\n    const [interval, setInterval] = useState(1);\n    const {currency, symbol} = CryptoState();\n    const getHistData = async () => {\n        const {data} = await axios.get(HistoricalChart(coin.id, interval, currency))\n        setHist(data.prices)\n    }\n    useEffect(() => {\n        getHistData()\n    }, [currency, interval])\n\nreturn (\n    <ThemeProvider theme={darkTheme}>\n        <div className={classes.container}>\n            {\n                !hist ? (\n                    <CircularProgress style = {{color: \"gold\"}} size = {250} thickness={1}/>\n                ) : (\n                    <>\n                    <Line\n                    data = {{\n                        labels: hist.map((coin) => {\n                            var date = new Date(coin[0]);\n                            var time = date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                      return interval === 1 ? time : date.toLocaleDateString();\n                        }),\n                        datasets:[\n                           {data : hist.map((coin) => {\n                               return coin[1]\n                            }),\n                            label: `Price ( Past ${interval} Days ) in ${currency}`,\n                            borderColor: \"#EEBC1D\",\n                            }\n                        ]\n                    }}\n                        options={{\n                        elements: {\n                            point: {\n                            radius: 1,\n                            },\n                         },\n                        }}\n                     />\n                     <div style={{\n                        display: \"flex\",\n                        marginTop: 20,\n                        justifyContent: \"space-around\",\n                        width: \"100%\",\n                        }}>\n                    {chartdays.map((day)=> {\n                        <Button key = {day.value} \n                        onclick = {() => {setInterval(day.value)}}\n                        selected = {day.value === interval}\n                        >{day.label}</Button>\n                    })}\n                     </div>\n                    </>\n                )\n            }\n        </div>\n    </ThemeProvider>\n)\n\n}\n\nexport default Coininfo;\n\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { HistoricalChart } from \"../api\"\n// import { Line } from \"react-chartjs-2\";\n// import {\n//   CircularProgress,\n//   createTheme,\n//   makeStyles,\n//   ThemeProvider,\n// } from \"@material-ui/core\";\n// import SelectButton from \"./Button\";\n// import { CryptoState } from \"../context\";\n\n// const CoinInfo = ({ coin }) => {\n//         const chartDays = [\n//         {\n//           label: \"24 Hours\",\n//           value: 1,\n//         },\n//         {\n//           label: \"30 Days\",\n//           value: 30,\n//         },\n//         {\n//           label: \"3 Months\",\n//           value: 90,\n//         },\n//         {\n//           label: \"1 Year\",\n//           value: 365,\n//         },\n//       ];\n//   const [historicData, setHistoricData] = useState();\n//   const [days, setDays] = useState(1);\n//   const { currency } = CryptoState();\n//   const [flag,setflag] = useState(false);\n\n//   const useStyles = makeStyles((theme) => ({\n//     container: {\n//       width: \"75%\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       marginTop: 25,\n//       padding: 40,\n//       [theme.breakpoints.down(\"md\")]: {\n//         width: \"100%\",\n//         marginTop: 0,\n//         padding: 20,\n//         paddingTop: 0,\n//       },\n//     },\n//   }));\n\n//   const classes = useStyles();\n\n//   const fetchHistoricData = async () => {\n//     const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n//     setflag(true);\n//     setHistoricData(data.prices);\n//   };\n\n  \n\n//   useEffect(() => {\n//     fetchHistoricData();\n//   }, [days]);\n\n//   const darkTheme = createTheme({\n//     palette: {\n//       primary: {\n//         main: \"#fff\",\n//       },\n//       type: \"dark\",\n//     },\n//   });\n//   var data = null;\n//   if (historicData) {\n//   data = {\n//     labels: historicData.map((item) => {\n//               let date = new Date(item[0]);\n//               let time =\n//                 date.getHours() > 12\n//                   ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n//                   : `${date.getHours()}:${date.getMinutes()} AM`;\n//               return days === 1 ? time : date.toLocaleDateString();\n//             }),\n//             datasets: [\n//                       {\n//                         data: historicData.map((item) => item[1]),\n//                         label: `Price ( Past ${days} Days ) in ${currency}`,\n//                         borderColor: \"#EEBC1D\",\n//                       },\n//                     ]    \n// }\n//   }\n//   return (\n//     <ThemeProvider theme={darkTheme}>\n//       <div className={classes.container}>\n//         {!historicData | flag===false ? (\n//           <CircularProgress\n//             style={{ color: \"gold\" }}\n//             size={250}\n//             thickness={1}\n//           />\n//         ) : (\n//           <>\n          \n//             <Line data={data}/>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 marginTop: 20,\n//                 justifyContent: \"space-around\",\n//                 width: \"100%\",\n//               }}\n//             >\n//               {chartDays.map((day) => (\n//                 <SelectButton\n//                   key={day.value}\n//                   onClick={() => {setDays(day.value);\n//                     setflag(false);\n//                   }}\n//                   selected={day.value === days}\n//                 >\n//                   {day.label}\n//                 </SelectButton>\n//               ))}\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </ThemeProvider>\n//   );\n// };\n\n// export default CoinInfo;"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}